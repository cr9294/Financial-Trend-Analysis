import json
import random
import re
import pandas as pd

year_l = ['2019', '2020', '2021', '2022']
city_l = ['广东省', '深圳', '上海', '北京市', '上海市', '深圳市', '北京', '杭州', '长沙', '广州', '成都', '重庆', '江苏',
        '四川']
filed1_l = ['经营活动现金流入小计', '固定资产', '支付的各项税费', '经营活动现金流出小计', '投资活动现金流出小计',
          '应交税费', '应付职工薪酬', '未分配利润', '负债合计', '资产总计', '税金及附加', '无形资产',
          '筹资活动现金流出小计',
          '投资活动现金流入小计', '货币资金', '资本公积', '经营活动产生的现金流量净额', '投资活动产生的现金流量净额',
          '收到其他与经营活动有关的现金', '利息收入',
          '营业收入', '营业外支出',
          '支付其他与经营活动有关的现金', '筹资活动产生的现金流量净额', '盈余公积', '营业利润', '营业外收入',
          '所得税费用', '其他收益',
          '现金及现金等价物净增加额', '净利润', '其他应收款', '营业成本', '综合收益总额', '流动资产合计', '应收账款',
          '预付款项', '其他应付款',
          '非流动资产合计', '基本每股收益', '购买商品', '接受劳务支付的现金', '应付账款', '流动负债合计', '利润总额',
          '管理费用', '其他流动资产',
          '递延所得税资产', '销售商品', '提供劳务收到的现金', '期末现金及现金等价物余额', '财务费用', '营业总收入',
          '期初现金及现金等价物余额',
          '非流动负债合计', '存货', '分配股利', '利润或偿付利息支付的现金', '稀释每股收益', '所有者权益合计',
          '营业总成本', '销售费用', '负债和所有者权益总计',
          '筹资活动现金流入小计', '持续经营净利润', '归属于母公司所有者权益合计', '信用减值损失', '购建固定资产',
          '无形资产和其他长期资产支付的现金',
          '财务人员', '归属于母公司所有者的综合收益总额', '销售人员', '处置固定资产',
          '无形资产和其他长期资产收回的现金净额', '投资收益', '行政人员',
          '母公司及主要子公司需承担费用的离退休职工人数', '技术人员', '利息费用', '生产人员', '研发费用',
          '资产减值损失', '在建工程', '支付其他与筹资活动有关的现金',
          '资产处置收益', '长期待摊费用', '偿还债务支付的现金', '递延收益', '其他非流动资产', '取得借款收到的现金',
          '取得投资收益收到的现金',
          '投资支付的现金', '收到的税费返还', '短期借款', '少数股东权益', '归属于少数股东的综合收益总额',
          '少数股东损益', '归属于母公司股东的净利润',
          '在职员工的数量合计', '汇率变动对现金及现金等价物的影响', '母公司在职员工的数量', '主要子公司在职员工的数量']
filed2_l = ['经营活动现金流入小计', '公司的中文简称', '固定资产', '支付的各项税费', '经营活动现金流出小计',
          '投资活动现金流出小计', '应交税费',
          '应付职工薪酬', '未分配利润', '负债合计', '电子信箱', '资产总计', '税金及附加', '无形资产',
          '公司的法定代表人', '筹资活动现金流出小计', '投资活动现金流入小计', '货币资金', '资本公积',
          '经营活动产生的现金流量净额', '投资活动产生的现金流量净额', '收到其他与经营活动有关的现金', '利息收入',
          '营业收入', '营业外支出', '支付其他与经营活动有关的现金', '筹资活动产生的现金流量净额', '盈余公积',
          '营业利润', '营业外收入', '所得税费用', '其他收益', '现金及现金等价物净增加额', '净利润', '其他应收款',
          '营业成本', '综合收益总额', '流动资产合计', '应收账款', '预付款项', '其他应付款', '非流动资产合计',
          '基本每股收益', '购买商品', '接受劳务支付的现金', '应付账款', '流动负债合计', '利润总额', '管理费用',
          '其他流动资产', '递延所得税资产', '销售商品', '提供劳务收到的现金', '期末现金及现金等价物余额', '财务费用',
          '营业总收入', '期初现金及现金等价物余额', '非流动负债合计', '存货', '分配股利', '利润或偿付利息支付的现金',
          '稀释每股收益', '所有者权益合计', '营业总成本', '销售费用', '负债和所有者权益总计', '筹资活动现金流入小计',
          '持续经营净利润', '归属于母公司所有者权益合计', '信用减值损失', '购建固定资产',
          '无形资产和其他长期资产支付的现金', '财务人员', '归属于母公司所有者的综合收益总额', '销售人员',
          '处置固定资产', '无形资产和其他长期资产收回的现金净额', '投资收益', '行政人员',
          '母公司及主要子公司需承担费用的离退休职工人数', '技术人员', '利息费用', '生产人员', '研发费用',
          '资产减值损失', '在建工程', '支付其他与筹资活动有关的现金', '资产处置收益', '长期待摊费用',
          '偿还债务支付的现金', '递延收益', '其他非流动资产', '取得借款收到的现金', '取得投资收益收到的现金',
          '投资支付的现金', '收到的税费返还', '短期借款', '少数股东权益', '归属于少数股东的综合收益总额',
          '少数股东损益', '归属于母公司股东的净利润', '在职员工的数量合计', '汇率变动对现金及现金等价物的影响',
          '母公司在职员工的数量', '主要子公司在职员工的数量']
top_num_l = [['两', '2'], ['五', '5'], ['5', '5'], ['三', '3'], ['十', '10'], ['二十', '20'], ['10', '10'],
           ['十五', '15'], ['四', '4'], ['4', '4'], ['15', '15'], ['3', '3']]
order_num_l = [['二', '1'], ['五', '4'], ['5', '4'], ['三', '2'], ['十', '9'], ['二十', '19'], ['10', '9'],
             ['十五', '14'], ['四', '3'], ['4', '3'], ['15', '14'], ['3', '2'], ['六', '5'], ['七', '6'], ['八', '7'],
             ['九', '8']]

with open('F:\mantoutech\dataset\prompt.jsonl', 'r', encoding='utf-8') as f:
    test_questions = [json.loads(line) for line in f.readlines()]

questions = []
answers = []
for q in test_questions:
    for i in range(20):
        year = year_l[random.randint(0, len(year_l)-1)]
        city = city_l[random.randint(0, len(city_l)-1)]
        filed1 = filed1_l[random.randint(0, len(filed1_l)-1)]
        filed2 = filed2_l[random.randint(0, len(filed2_l)-1)]
        while filed1 == filed2:
            print('重复了。。。。。重取')
            filed2 = filed2_l[random.randint(0, len(filed2_l)-1)]
        top_num = list(top_num_l[random.randint(0, len(top_num_l)-1)])
        order_num = list(order_num_l[random.randint(0, len(order_num_l)-1)])
        replace_dict = {
            "[年份]": year,
            "[城市]": city,
            "[指标]": filed1,
            "[指标1]": filed1,
            "[指标2]": filed2,
            "[top数量]": top_num[0],
            "[top数量limit]": top_num[1],
            "[数量]": order_num[0],
            "[数量-1]": order_num[1]
        }

        pattern = re.compile("|".join(map(re.escape, replace_dict.keys())))
        questions.append(pattern.sub(lambda m: replace_dict[m.group()], q['question']))
        answers.append(pattern.sub(lambda m: replace_dict[m.group()], q['answer']))

df = pd.DataFrame()
df['question'] = questions
df['answer'] = answers
df.to_csv('F:/mantoutech/dataset/tuning_prompt.csv')
